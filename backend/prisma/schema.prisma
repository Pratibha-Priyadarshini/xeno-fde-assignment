generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id         Int      @id @default(autoincrement())
  name       String
  shopDomain String   @unique
  apiKey     String?
  apiSecret  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  stores     Store[]
  users      User[]
}

model Store {
  id        Int       @id @default(autoincrement())
  tenantId  Int
  name      String
  domain    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  customers Customer[]
  products  Product[]
  orders    Order[]

  @@index([tenantId])
}

model User {
  id        Int      @id @default(autoincrement())
  tenantId  Int
  email     String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenant    Tenant   @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
}

model Customer {
  id         Int      @id @default(autoincrement())
  storeId    Int
  externalId String   @unique
  email      String?
  firstName  String?
  lastName   String?
  totalSpent Float    @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  store      Store    @relation(fields: [storeId], references: [id])
  orders     Order[]

  @@index([storeId])
}

model Product {
  id         Int      @id @default(autoincrement())
  storeId    Int
  externalId String   @unique
  title      String
  price      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  store      Store    @relation(fields: [storeId], references: [id])

  @@index([storeId])
}

model Order {
  id         Int      @id @default(autoincrement())
  storeId    Int
  externalId String   @unique
  customerId Int?
  totalPrice Float
  createdAt  DateTime
  updatedAt  DateTime @updatedAt
  store      Store    @relation(fields: [storeId], references: [id])
  customer   Customer? @relation(fields: [customerId], references: [id])

  @@index([storeId])
  @@index([customerId])
}
